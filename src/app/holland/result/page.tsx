export const dynamic = "force-dynamic";

import { cookies } from "next/headers";
import { redirect } from "next/navigation";
import { createServerComponentClient } from "@supabase/auth-helpers-nextjs";

interface Props {
  searchParams: { code?: string; score?: string };
}

/* ‚îÄ‚îÄ Gi·∫£i th√≠ch 6 nh√≥m R-I-A-S-E-C ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
const TRAITS: Record<string, string> = {
  R: "Realistic ‚Äì ∆Øa h√†nh ƒë·ªông, thao t√°c v·ªõi v·∫≠t th·ªÉ.",
  I: "Investigative ‚Äì Ph√¢n t√≠ch, kh√°m ph√°, th√≠ch nghi√™n c·ª©u.",
  A: "Artistic ‚Äì S√°ng t·∫°o, tr·ª±c gi√°c, bi·ªÉu ƒë·∫°t √Ω t∆∞·ªüng.",
  S: "Social ‚Äì H·ªó tr·ª£, h·ª£p t√°c, gi√∫p ƒë·ª° ng∆∞·ªùi kh√°c.",
  E: "Enterprising ‚Äì Thuy·∫øt ph·ª•c, l√£nh ƒë·∫°o, kinh doanh.",
  C: "Conventional ‚Äì T·ªâ m·ªâ, d·ªØ li·ªáu, quy tr√¨nh, t·ªï ch·ª©c.",
};

/* helper hi·ªÉn th·ªã m√¥ t·∫£ 3 ch·ªØ code */
const explain = (code: string) =>
  code
    .split("")
    .map((c) => TRAITS[c] ?? c)
    .join(" | ");

export default async function HollandResultPage({ searchParams }: Props) {
  /* ------------------------------------------------------------------ */
  /* 0. L·∫•y & validate m√£ Holland & ƒëi·ªÉm radar                          */
  /* ------------------------------------------------------------------ */
  const code = (searchParams.code ?? "").toUpperCase();
  if (!/^[RIASEC]{3}$/.test(code)) redirect("/holland");

  /* Gi·∫£i m√£ ƒëi·ªÉm radar (base64-JSON) ‚Äì n·∫øu kh√¥ng c√≥ s·∫Ω redirect */
  if (!searchParams.score) redirect("/holland");
  let score: Record<string, number>;
  try {
    score = JSON.parse(
      Buffer.from(searchParams.score, "base64").toString("utf8")
    );
  } catch {
    redirect("/holland");
  }

  /* ------------------------------------------------------------------ */
  /* 1. Supabase + Auth                                                 */
  /* ------------------------------------------------------------------ */
  const supabase = createServerComponentClient({ cookies });
  const {
    data: { user },
  } = await supabase.auth.getUser();
  if (!user) redirect("/login?redirectedFrom=/holland");

  /* ------------------------------------------------------------------ */
  /* 2. L∆∞u k·∫øt qu·∫£ v√†o DB                                              */
  /* ------------------------------------------------------------------ */
  /* 2a. Ghi l·ªãch s·ª≠ holland_results                                    */
  await supabase.from("holland_results").insert({
    user_id: user.id,
    code,
    score, // jsonb
  });

  /* 2b. Upsert v√†o career_profiles                                     */
  await supabase
    .from("career_profiles")
    .upsert(
      {
        user_id: user.id,
        holland_profile: score, // jsonb column
        holland_code: code,     // n·∫øu b·∫£ng c·ªßa b·∫°n KH√îNG c√≥ c·ªôt n√†y, h√£y xo√° d√≤ng n√†y
        updated_at: new Date(),
      },
      { onConflict: "user_id" }
    );

  /* 2c. G·ª≠i tin nh·∫Øn v√†o chatbot                                       */
  await supabase.from("chat_messages").insert({
    user_id: user.id,
    role: "assistant",
    content: `üéâ B·∫°n v·ª´a ho√†n th√†nh tr·∫Øc nghi·ªám Holland. K·∫øt qu·∫£ l√† **${code}** ( ${explain(
      code
    )} ). C√≥ c·∫ßn t√¥i g·ª£i √Ω ngh·ªÅ nghi·ªáp ph√π h·ª£p kh√¥ng?`,
  });

  /* ------------------------------------------------------------------ */
  /* 3. UI                                                              */
  /* ------------------------------------------------------------------ */
  return (
    <div className="max-w-3xl mx-auto py-20 space-y-10 text-center">
      <h1 className="text-3xl font-bold">K·∫øt qu·∫£ Holland: {code}</h1>

      {/* m√¥ t·∫£ ng·∫Øn 3 ch·ªØ */}
      <div className="rounded-lg bg-white p-6 shadow text-left">
        <p>{explain(code)}</p>
      </div>

      {/* b·∫£ng ƒëi·ªÉm radar gi·∫£n ƒë∆°n */}
      <table className="mx-auto text-sm">
        <tbody>
          {Object.entries(score).map(([k, v]) => (
            <tr key={k}>
              <td className="pr-4 font-medium">{k}</td>
              <td>{v}</td>
            </tr>
          ))}
        </tbody>
      </table>

      <a
        href="/profile?step=trait"
        className="inline-block rounded bg-blue-600 px-6 py-3 font-medium text-white hover:bg-blue-700"
      >
        Xem H·ªì s∆° Ph√°t tri·ªÉn ngh·ªÅ
      </a>
    </div>
  );
}
